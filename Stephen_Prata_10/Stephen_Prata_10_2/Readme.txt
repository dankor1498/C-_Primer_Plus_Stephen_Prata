ѕусть имеетс€ определение следующего простого класса:

class Person {
private:
	static const LIMIT = 25;
	string lname; // фамили€
	char fname[LIMIT]; // им€
public:
	Person() { lname = fname[0] = '\0'; } // #1
	Person(const string & ln, const char * fn = "Heyyou"); // #2
	// —ледующие методы отображают lname и fname
	void Show() const; // формат: им€ фамили€
	void FormalShow() const; // формат: фамили€, им€
};

(¬ нем используетс€ объект string и символьный массив, так что вы сможете
сравнить применение этих двух форм.) Ќапишите программу, котора€ дополнит
реализацию за счет предоставлени€ кода дл€ пока еще не определенных методов. 
¬ программе, использующей класс, должны также присутствовать вызовы
трех возможных конструкторов (без аргументов, с одним аргументом, с двум€
аргументами) и двух методов отображени€. Ќиже приведен пример применени€
этих конструкторов и методов:

Person one; // используетс€ конструктор по умолчанию
Person two("Smythecraft"); // используетс€ конструктор #2
//с одним аргументом по умолчанию
Person three("Dimwiddy", "Sam"); // используетс€ конструктор #2,
// без аргументов по умолчанию
one.Show();
cout << endl;
one.FormalShow();
// и т.д. дл€ объектов two и three