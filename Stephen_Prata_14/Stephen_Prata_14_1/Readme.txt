Класс Wine имеет член string, содержащий наименование вина, и
объекты Pair и valarray<int>. Первый член объекта
Pair содержит год сбора винограда, а второй член - количество бутылок,
разлитых в соответствующем году. Например, первый объект valarray объекта
Pair содержит годы 1988, 1992 и 1996, а второй объект valarray - количества
бутылок: 24, 48 и 144. Неплохо было бы, если бы объект Wine содержал член
int для хранения возраста вина в годах. Для упрощения кода будут полезны несколько
typedef-объявлений:
	typedef std::valarray<int> Arrayint;
	typedef Pair<Arrayint, Arrayint> PairArray;
Таким образом, тип PairArray представляет тип Pair<std::valarray<int>,
std::valarray<int>>. Реализуйте класс Wine, используя технику включения.
Класс должен иметь конструктор по умолчанию и, как минимум, следующие
конструкторы:

// инициализировать lаbе1 значением 1, количество лет - у,
// год сбора винограда - yr[] , бутылки - bot[]
Wine (const char * l, int у, const int yr[], const int bot[]);
// инициализировать lаbе1 значением l, количество лет - у,
// создать объекты массива размерностью у
Wine(const char * l, int у);

Класс Wine должен иметь метод GetBottles() , который для объекта Wine заданного
возраста предлагает пользователю ввести соответствующее значение
года сбора винограда и количество бутылок. Метод Label() будет возвращать
ссылку на наименование вина. Метод sum() будет возвращать общее количество
бутылок во втором объекте valarray<int> объекта Pair.
Программа должна предлагать пользователю ввести наименование вина, количество
элементов в массиве, а также год и количество бутылок для каждого
элемента массива. Программа будет использовать эти данные для создания объекта
Wine и отображения информации, хранимой в объекте. Для справки ниже
приведен пример тестовой программы:

int main(void)
{
	using std::cin;
	using std::cout;
	using std::endl;
	cout << "Enter name of wine: ";    // ввод названия вина
	char lab[50];
	cin.getline(lab, 50);
	cout << "Enter number of years: "; // ввод количества годов сбора винограда
	int yrs;
	cin >> yrs;
	Wine holding(lab, yrs);            // сохранение названия, лет,
	                                   // создание массивов из yrs элементов
	holding.GetBottles();              // предложение ввести год и количество бутылок
	holding.Show();                    // вывод содержимого объекта
	const int YRS = 3;
	int y[YRS] = { 1993, 1995, 1998 };
	int b[YRS] = { 48, 60, 72 };
	// Создание нового объекта, инициализация
	// с использованием данных из массивов у и Ь
	Wine more("Gushing Grape Red", YRS, y, b);
	more.Show();
	cout << "Total bottles for " << more.Label() // используется метод Label()
		<< ": " << more.sum() << endl;           // используется метод sum()
	cout << "Bye\n";
	return 0;
}

Ниже показан пример вывода тестовой программы:

Введите наименование вина: Gully Wash
Введите количество сборов урожая: 4
Введите данные для Gully Wash по 4 годам:
Введите год : 1988
Введите количество бутылок для этого года: 42
Введите год : 1994
Введите количество бутылок для этого года: 58
Введите год : 1998
Введите количество бутылок для этого года: 122
Введите год : 2001
Введите количество бутылок для этого года: 144
Вино: Gully Wash
	Год 	Бутылок
	1988 	42
	1994 	58
	1998 	122
	2001 	144
Вино: Gushing Grape Red
	Год 	Бутылок
	1993 	48
	1995 	60
	1998 	72
Общее количество бутылок Gushing Grape Red: 180
Всего наилучшего! 